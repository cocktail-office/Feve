package org.cocktail.feve.components;
// Generated by the WOLips TemplateEngine Plug-in at ${WOLipsContext.getDate()}

import org.cocktail.feve.components.common.FeveWebComponent;
import org.cocktail.fwkcktlwebapp.common.CktlUserInfo;
import org.cocktail.fwkcktlwebapp.server.CktlWebAction;
import org.cocktail.fwkcktlwebapp.server.components.CktlLogin;
import org.cocktail.fwkcktlwebapp.server.components.CktlLoginResponder;

import com.webobjects.appserver.WOComponent;
import com.webobjects.appserver.WOContext;

public class PageLogin extends FeveWebComponent {

	public CktlLoginResponder loginResponder = new LoginResponder();
	public boolean isBadNavigator = false;
	public String linkAppDT = app.config().stringForKey("DT_APPLIW3");
	private String linkCasLogin;
	
	public PageLogin(WOContext context) {
		super(context);
	}
		
	public String linkCasLogin() {
		if (linkCasLogin == null) {
			//linkCasLogin = app.getApplicationURL(context()) + "/wa/casLogin";/*?wosid="	+ session.sessionID();*/
			linkCasLogin = CktlWebAction.getLoginActionURL(context(), true, null, true, null);
		}
		return linkCasLogin;
	}

	public class LoginResponder implements CktlLoginResponder {

		public WOComponent loginAccepted(CktlLogin loginComponent) {
			CktlUserInfo connectedUser = null;
			// Recuperation des donnees associees a l'individu connecte
			connectedUser = loginComponent.loggedUserInfo();
			session.setConnectedUserInfo(connectedUser);
			// choix de la page de destination selon l'individu
			return session.loginRedirect(connectedUser.persId());
		}

		public boolean acceptLoginName(String loginName) {
			return cktlApp.acceptLoginName(loginName);
		}

		public boolean acceptEmptyPassword() {
			return cktlApp.config().booleanForKey("ACCEPT_EMPTY_PASSWORD");
		}

		public String getRootPassword() {
			return cktlApp.getRootPassword();
		}

	}
}