package org.cocktail.feve.components;

// Generated by the WOLips TemplateEngine Plug-in at 23 nov. 2005 17:09:34

import org.cocktail.feve.app.Session;
import org.cocktail.feve.components.common.A_FeveSubMenuPage;
import org.cocktail.feve.components.evaluation.ListeEvaluationCtrl;
import org.cocktail.feve.components.poste.CompPosteListCtrl;
import org.cocktail.feve.components.poste.PagePosteCtrl;

import com.webobjects.appserver.WOComponent;
import com.webobjects.appserver.WOContext;
import com.webobjects.foundation.NSArray;

public class PageToutesLesFiches extends A_FeveSubMenuPage {

	public PageToutesLesFiches(WOContext context) {
		super(context);
		initComponent();
	}

	private void initComponent() {
		posteCtrl = new PagePosteCtrl(session);
		// posteCtrl est le noeud racine, on ne l'affiche donc pas dans le fil
		// d'ariane
		posteCtrl.setShowNode(false);
		listeEvaluationCtrl = new ListeEvaluationCtrl(session);
		listeEvaluationCtrl.setLinkLabel("Accès à la liste des entretiens professionnels");
		listeEvaluationCtrl.setLinkTitle("Retouner à la liste des entretiens professionnels dont vous avez accès");
		listeEvaluationCtrl.setStringLabel("Liste des entretiens professionnels");
		// ne pas afficher la période car elle est filtrée dans un popup
		listeEvaluationCtrl.setIsAfficherPeriode(false);
	}

	// gestion du menu

	// public final static String ITEM_MENU_INFORMATION_SERVICE =
	// "Information Service";
	public final static String ITEM_MENU_POSTE = "Postes, fiches de poste et fiches LOLF";
	// public final static String ITEM_MENU_FICHE_DE_POSTE = "Fiche de poste";
	// public final static String ITEM_MENU_FICHE_LOLF = "Fiche LOLF";
	public final static String ITEM_MENU_EVALUATION = "Entretiens professionnels";
	public final static String ITEM_MENU_SUIVI_FICHE_LOLF = "Suivi des fiches LOLF";

	public NSArray getEtapeInfos() {
		return new NSArray(new String[] {
				/*
				 * "<b>Informations utilis�es pour les fiches de poste</b><br>" +
				 * "Les rubriques concern�es sont Mission de la composante (si vous administrez une composante)<br>"
				 * +
				 * "Mission et Projet du service (si vous etes responsable d un service)<br>"
				 * + "Sur toutes les fiches de postes qui d�pendent de vos services",
				 */

				"",

				/*
				 * "Les fiches de postes surlesquelles vous avez les droits de modification ou visualisation<br>"
				 * +
				 * "-Vous etes responsable d un service : toutes les fiches des postes affect�s a ce service<br>"
				 * +
				 * "-Vous etes responsable d un agent : toutes les fiches de poste le concernant<br>"
				 * +
				 * "-Vous etes responsable d un poste : toutes les fiches qui y sont attach�es<br>"
				 * + "-Vos propres fiches de poste",
				 * 
				 * "Les fiches LOLFs surlesquelles vous avez les droits de modification ou visualisation<br>"
				 * +
				 * "-Vous etes responsable d un service : toutes les fiches des postes affect�s a ce service<br>"
				 * +
				 * "-Vous etes responsable d un agent : toutes les fiches LOLF le concernant<br>"
				 * +
				 * "-Vous etes responsable d un poste : toutes les fiches qui y sont attach�es<br>"
				 * + "-Vos propres fiches LOLF",
				 */
				/*
				 * "R�partition en ETP (Emplois Temps Plein) saisie dans les fiche LOLF<br>"
				 * + "auxquelles vous avez acc�s",
				 */

				"Les fiches d'entretiens professionnels des agents, cadr&eacute;es sur p&eacute;riode<br>" +
						"-Modification : evaluez de vos N-1 directs<br>" +
						"-Visualisation : visualisez vos N-p d&eacute;finis dans l'arbre hi&eacute;rarchique<br>" +
						"-Visualisation : consultez les informations de votre propre entretien professionnel",

				"Répartition en ETP (Emplois Temps Plein) saisie dans les fiche LOLF<br>" +
						"auxquelles vous avez accès"

		});
	}

	public NSArray getMenuItems() {
		NSArray menuItems = new NSArray();
		menuItems = menuItems.arrayByAddingObject(ITEM_MENU_POSTE);
		if (session.niveauConnexion() == Session.NIVEAU_CONNEXION_COMPLETE) {
			/*
			 * if (session.isResponsableService()) { menuItems_ =
			 * menuItems_.arrayByAddingObject(ITEM_MENU_INFORMATION_SERVICE); }
			 */
			// menuItems_ = menuItems_.arrayByAddingObject(ITEM_MENU_FICHE_DE_POSTE);
			// menuItems_ = menuItems_.arrayByAddingObject(ITEM_MENU_FICHE_LOLF);
			// les stats sont dispo pour ceux qui voi
			// menuItems_ = menuItems_.arrayByAddingObject(ITEM_MENU_STATS_LOLF);
			menuItems = menuItems.arrayByAddingObject(ITEM_MENU_EVALUATION);
			// TODO a faire
			// menuItems = menuItems.arrayByAddingObject(ITEM_MENU_SUIVI_FICHE_LOLF);
		} else if (session.niveauConnexion() == Session.NIVEAU_CONNEXION_LOLF) {
			// menuItems_ = menuItems_.arrayByAddingObject(ITEM_MENU_FICHE_LOLF);
			menuItems = menuItems.arrayByAddingObject(ITEM_MENU_SUIVI_FICHE_LOLF);
		}
		return menuItems;
	}

	public WOComponent selectMenu() {
		// la selection de l'item "Gestion de poste",
		// on remet a zero si on est deja dans cet item
		if (unItemMenu != null && unItemMenu.equals(ITEM_MENU_POSTE)) {
			if (getSelectedItemMenu() != null && unItemMenu.equals(getSelectedItemMenu())) {
				// masquer le detail du poste si inspecté
				CompPosteListCtrl compPosteListCtrl = posteCtrl.getCompPosteListCtrl();
				if (compPosteListCtrl != null && compPosteListCtrl.isAffichageFullComponent()) {
					compPosteListCtrl.toFullComponent();
				}
				posteCtrl.toFullComponent();
			}
		}
		// la selection de l'item "Evaluation",
		// on remet a zero si on est deja dans cet item
		if (unItemMenu != null && unItemMenu.equals(ITEM_MENU_EVALUATION)) {
			if (getSelectedItemMenu() != null && unItemMenu.equals(getSelectedItemMenu())) {
				listeEvaluationCtrl.redisplayGlobalComponent();
			}
		}
		setSelectedItemMenu(unItemMenu);
		return neFaitRien();
	}

	/**
	 * Le controleur de la page de gestion de poste qu'on affiche ici
	 */
	public PagePosteCtrl posteCtrl;

	/**
	 * Le controleur de la page des evaluations qu'on affiche ici
	 */
	public ListeEvaluationCtrl listeEvaluationCtrl;

	// boolean page en cours
	// public boolean isPageInformationService() { return false;/*return
	// selectedItemMenu().equals(ITEM_MENU_INFORMATION_SERVICE);*/ }
	// public boolean isPageFicheDePoste() { return
	// false;/*selectedItemMenu().equals(ITEM_MENU_FICHE_DE_POSTE);*/ }
	// public boolean isPageFicheLolf() { return
	// false;/*selectedItemMenu().equals(ITEM_MENU_FICHE_LOLF);*/ }
	public boolean isPageEvaluation() {
		return getSelectedItemMenu().equals(ITEM_MENU_EVALUATION);
	}

	public boolean isPagePoste() {
		return getSelectedItemMenu().equals(ITEM_MENU_POSTE);
	}

	public boolean isSuiviFicheLolf() {
		return getSelectedItemMenu().equals(ITEM_MENU_SUIVI_FICHE_LOLF);
	}

}